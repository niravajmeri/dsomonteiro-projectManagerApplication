// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUpStepThree should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUpStepThree />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
>
        <FormGroup
                bsClass="form-group"
                controlId="verificationCode"
        >
                <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                >
                        Validation code
                </ControlLabel>
                <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        componentClass="input"
                        onChange={[Function]}
                        type="text"
                        value=""
                />
        </FormGroup>
        <Alert
                bsClass="alert"
                bsStyle="danger"
                className="hide-code"
                closeLabel="Close alert"
        >
                <strong>
                        Invalid validation code!
                </strong>
                 Try again.
        </Alert>
        <Button
                active={false}
                block={true}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                type="submit"
        >
                Send validation code
        </Button>
</form>,
      "className": "validationCodeForm",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FormGroup
            bsClass="form-group"
            controlId="verificationCode"
>
            <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
            >
                        Validation code
            </ControlLabel>
            <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        componentClass="input"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
</FormGroup>,
          <Alert
            bsClass="alert"
            bsStyle="danger"
            className="hide-code"
            closeLabel="Close alert"
>
            <strong>
                        Invalid validation code!
            </strong>
             Try again.
</Alert>,
          <Button
            active={false}
            block={true}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            type="submit"
>
            Send validation code
</Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": Array [
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
>
                Validation code
</ControlLabel>,
              <FormControl
                autoFocus={true}
                bsClass="form-control"
                componentClass="input"
                onChange={[Function]}
                type="text"
                value=""
/>,
            ],
            "controlId": "verificationCode",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Validation code",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Validation code",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "bsClass": "form-control",
                "componentClass": "input",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "alert",
            "bsStyle": "danger",
            "children": Array [
              <strong>
                Invalid validation code!
</strong>,
              " Try again.",
            ],
            "className": "hide-code",
            "closeLabel": "Close alert",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Invalid validation code!",
              },
              "ref": null,
              "rendered": "Invalid validation code!",
              "type": "strong",
            },
            " Try again.",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "block": true,
            "bsClass": "btn",
            "bsStyle": "default",
            "children": "Send validation code",
            "disabled": false,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Send validation code",
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
>
          <FormGroup
                    bsClass="form-group"
                    controlId="verificationCode"
          >
                    <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                    >
                              Validation code
                    </ControlLabel>
                    <FormControl
                              autoFocus={true}
                              bsClass="form-control"
                              componentClass="input"
                              onChange={[Function]}
                              type="text"
                              value=""
                    />
          </FormGroup>
          <Alert
                    bsClass="alert"
                    bsStyle="danger"
                    className="hide-code"
                    closeLabel="Close alert"
          >
                    <strong>
                              Invalid validation code!
                    </strong>
                     Try again.
          </Alert>
          <Button
                    active={false}
                    block={true}
                    bsClass="btn"
                    bsStyle="default"
                    disabled={false}
                    type="submit"
          >
                    Send validation code
          </Button>
</form>,
        "className": "validationCodeForm",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormGroup
              bsClass="form-group"
              controlId="verificationCode"
>
              <ControlLabel
                            bsClass="control-label"
                            srOnly={false}
              >
                            Validation code
              </ControlLabel>
              <FormControl
                            autoFocus={true}
                            bsClass="form-control"
                            componentClass="input"
                            onChange={[Function]}
                            type="text"
                            value=""
              />
</FormGroup>,
            <Alert
              bsClass="alert"
              bsStyle="danger"
              className="hide-code"
              closeLabel="Close alert"
>
              <strong>
                            Invalid validation code!
              </strong>
               Try again.
</Alert>,
            <Button
              active={false}
              block={true}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              type="submit"
>
              Send validation code
</Button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": Array [
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
>
                  Validation code
</ControlLabel>,
                <FormControl
                  autoFocus={true}
                  bsClass="form-control"
                  componentClass="input"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
              ],
              "controlId": "verificationCode",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "control-label",
                  "children": "Validation code",
                  "srOnly": false,
                },
                "ref": null,
                "rendered": "Validation code",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "bsClass": "form-control",
                  "componentClass": "input",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "alert",
              "bsStyle": "danger",
              "children": Array [
                <strong>
                  Invalid validation code!
</strong>,
                " Try again.",
              ],
              "className": "hide-code",
              "closeLabel": "Close alert",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Invalid validation code!",
                },
                "ref": null,
                "rendered": "Invalid validation code!",
                "type": "strong",
              },
              " Try again.",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": true,
              "bsClass": "btn",
              "bsStyle": "default",
              "children": "Send validation code",
              "disabled": false,
              "type": "submit",
            },
            "ref": null,
            "rendered": "Send validation code",
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
